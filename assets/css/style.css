/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
figcaption,
figure {
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * Add the correct display in IE.
 */
main {
  display: block;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 */
button {
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type=button],
[type=reset],
[type=submit] {
  /**
   * Remove the inner border and padding in Firefox.
   */
  /**
   * Restore the focus styles unset by the previous rule.
   */
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Show the overflow in Edge.
 */
input {
  overflow: visible;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
}
[type=search]::-webkit-search-cancel-button, [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/*
 * Add the correct display in IE 9-.
 */
menu {
  display: block;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

/* xl */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
.container {
  display: grid;
  grid-template-areas: "l m r";
  grid-template-columns: 220px 1fr 240px;
  gap: 30px;
  margin-top: 30px;
}

*,
*::after,
*::before {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-family: "Roboto", sans-serif;
  font-size: 14px;
  color: #eeeeee;
  padding-bottom: 10px;
  line-height: 1.5rem;
}

body {
  max-width: 1380px;
  padding: 0 30px 0 30px;
  margin: 0 auto;
  background-image: url(../../img/global-bg.jpg);
  background-color: #d8b036;
  background-size: cover;
  background-position: center;
  position: relative;
  background-attachment: fixed;
}

a {
  -webkit-text-decoration: #d8b036;
          text-decoration: #d8b036;
  color: #eeeeee;
}

h3 {
  padding-bottom: 10px;
  letter-spacing: 1.5px;
  border-bottom: 1px solid #333333;
  font-family: "Lora", serif;
  font-weight: 300;
  font-size: 1.17rem;
  margin-top: 5px;
  padding-bottom: 10px;
  line-height: 1.5rem;
}

.header {
  background: rgba(0, 0, 0, 0.5);
  border-radius: 0 0 7px 7px;
}

.header-logo {
  padding: 45px 15px 45px 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}
.header-logo__image {
  max-width: 400px;
  margin-bottom: 30px;
}
.header-logo span:first-of-type {
  text-transform: uppercase;
  font-size: 42px;
  font-family: "Lora", serif;
  line-height: 3.5rem;
  letter-spacing: 5px;
  margin-bottom: -5px;
  font-weight: 300;
}
.header-logo span:last-of-type {
  letter-spacing: 0.2em;
  font-weight: 700;
  line-height: 1.4em;
}

.header-navbar {
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 0 0 7px 7px;
}
.header-navbar__list {
  list-style-type: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0;
  padding: 0;
}
.header-navbar__link {
  line-height: 1.5em;
  display: block;
  border-radius: 4px;
  margin: 5px;
  padding: 10px 15px 10px 15px;
}
.header-navbar__link:hover, .header-navbar__link:focus, .header-navbar__link:active {
  background-color: rgba(0, 0, 0, 0.3);
  color: #e12727;
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
}

.main {
  grid-area: m;
}

.main-breadcrumb {
  background: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.8)));
  background: -o-linear-gradient(left, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
  background: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
  border-radius: 7px;
  text-align: end;
  padding: 8px 12px 8px 12px;
  margin-bottom: 30px;
  letter-spacing: 2px;
}
.main-breadcrumb span {
  padding-right: 1px;
}
.main-breadcrumb span:last-of-type {
  padding-right: 7px;
  color: #cccccc;
  font-weight: normal;
}
.main-breadcrumb span a {
  font-weight: bold;
}
.main-breadcrumb span a:hover {
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
  color: #e12727;
}
.main-breadcrumb span a:focus {
  color: #e12727;
}
.main-breadcrumb i {
  color: #cccccc;
  font-weight: bold;
}

.main-content__title {
  background: -webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.8)));
  background: -o-linear-gradient(right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
  background: linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
  border-radius: 7px;
  font-size: 2rem;
  margin: 20px 0 20px 0;
  padding: 8px 12px 8px 12px;
  color: #eeeeee;
  font-family: "Lora", serif;
  font-weight: 300;
  line-height: 1.5em;
  letter-spacing: 3px;
}

.main-content__body {
  max-width: 100%;
  display: grid;
  grid-template-areas: "a1 a2 a3" "a4 a5 a6" "a7 a8 a9" "a10 a11 a12";
  grid-template-columns: repeat(3, 1fr);
  margin: 1px -7.5px 22.5px -7.5px;
}
.main-content__item {
  padding: 7.5px;
}
.main-content__item:nth-of-type(3), .main-content__item:nth-of-type(6), .main-content__item:nth-of-type(9), .main-content__item:nth-of-type(12) {
  padding-right: 0;
}
.main-content__item-wrapper {
  overflow: hidden;
  position: relative;
  border-radius: 7px;
  border: 5px solid rgba(0, 0, 0, 0.5);
}
.main-content__item:hover .main-content__excerpt {
  top: 28px;
}
.main-content__item:hover h3 {
  color: #e12727;
  background-color: rgba(0, 0, 0, 0.7);
}
.main-content__item h3 {
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
  display: block;
  overflow: hidden;
  width: 100%;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  color: #eeeeee;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 3px 3px 0 0;
  text-shadow: 1px 1px 3px color-dark, 1px 1px 10px color-dark;
  font-size: 1rem;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  line-height: 1em;
  border-bottom: 0px;
  margin: 0;
  padding: 7px;
  position: absolute;
}
.main-content__excerpt {
  position: absolute;
  overflow: hidden;
  top: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  padding: 15px;
  text-align: center;
  width: 100%;
  height: calc(100% - 27px);
  -webkit-transition: ease-in-out 0.5s;
  -o-transition: ease-in-out 0.5s;
  transition: ease-in-out 0.5s;
}
.main-content__image img {
  display: block;
  max-width: 100%;
  height: auto;
  overflow: hidden;
  border-radius: 3px;
}

.main-content__item:nth-of-type(1) {
  grid-area: a1;
}

.main-content__item:nth-of-type(2) {
  grid-area: a2;
}

.main-content__item:nth-of-type(3) {
  grid-area: a3;
}

.main-content__item:nth-of-type(4) {
  grid-area: a4;
}

.main-content__item:nth-of-type(5) {
  grid-area: a5;
}

.main-content__item:nth-of-type(6) {
  grid-area: a6;
}

.main-content__item:nth-of-type(7) {
  grid-area: a7;
}

.main-content__item:nth-of-type(8) {
  grid-area: a8;
}

.main-content__item:nth-of-type(9) {
  grid-area: a9;
}

.main-content__item:nth-of-type(10) {
  grid-area: a10;
}

.main-content__item:nth-of-type(11) {
  grid-area: a11;
}

.main-content__item:nth-of-type(12) {
  grid-area: a12;
}

.left {
  grid-area: l;
}

.right {
  grid-area: r;
}

.widget {
  background: rgba(0, 0, 0, 0.5);
  border-radius: 7px;
  padding: 15px;
  margin-bottom: 15px;
}
.widget span {
  color: #cccccc;
  line-height: 2em;
}
.widget-text span {
  color: #cccccc;
}
.widget-footer__button {
  text-align: center;
  margin-bottom: 20px;
}
.widget-footer__button h3 {
  max-width: 300px;
  margin: 0 auto;
}
.widget-footer__button span {
  display: block;
  margin-top: 14px;
}

.widget-search__form {
  position: relative;
  max-width: 100%;
  margin: 15px 0 7px;
}
.widget-search__input {
  width: 100%;
  height: 30px;
  padding: 7px 8px 7px 40px;
  border: 1px solid rgba(238, 238, 238, 0.1);
  border-radius: 4px;
  outline: none;
  background: rgba(238, 238, 238, 0.1);
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  font-size: 0.85rem;
}
.widget-search__input::-webkit-input-placeholder {
  color: #cccccc;
}
.widget-search__input::-moz-placeholder {
  color: #cccccc;
}
.widget-search__input:-ms-input-placeholder {
  color: #cccccc;
}
.widget-search__input::-ms-input-placeholder {
  color: #cccccc;
}
.widget-search__input::placeholder {
  color: #cccccc;
}
.widget-search__submit {
  position: absolute;
  top: 0;
  left: 0px;
  width: 30px;
  height: 30px;
  border: none;
  background: rgba(238, 238, 238, 0);
  border-right: 1px solid rgba(238, 238, 238, 0.1);
  border-radius: 5px 0 0 5px;
  cursor: pointer;
  color: #eeeeee;
}

.widget-categories__list {
  list-style: none;
  padding: 0;
  margin: 0;
}
.widget-categories__link {
  display: block;
  padding: 5px 0 5px 0;
  line-height: 1.5rem;
  -webkit-transition: padding-left 0.5s;
  -o-transition: padding-left 0.5s;
  transition: padding-left 0.5s;
}
.widget-categories__link:hover {
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 4px;
  color: #e12727;
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
  padding-left: 10px;
}

.widget-news__item-wrapper {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  margin: 0 -15px 7.5px;
  padding: 0 15px 7.5px;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}
.widget-news__item-title {
  display: block;
  overflow: hidden;
  width: 100%;
  white-space: nowrap;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  margin: 0 0 10px;
  letter-spacing: 1px;
  font-weight: 300;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}
.widget-news__item-image {
  max-width: 75px;
  max-height: 75px;
  border-radius: 4px;
  overflow: hidden;
}
.widget-news__item-image img {
  max-width: 100%;
  display: block;
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  -o-transition: transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}
.widget-news__item-except {
  display: -webkit-box;
  overflow: hidden;
  max-height: 75px;
  font-size: 13px;
  line-height: 19px;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
  max-width: calc(100% - 75px);
  padding-left: 10px;
  color: #cccccc;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}
.widget-news__item :hover .widget-news__item-wrapper {
  background: -o-radial-gradient(center, ellipse, rgba(0, 0, 0, 0.65) 0%, rgba(0, 0, 0, 0) 100%);
  background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.65) 0%, rgba(0, 0, 0, 0) 100%);
}
.widget-news__item :hover .widget-news__item-title {
  text-shadow: 1px 1px 3px #000000, 1px 1px 10px #000000;
  color: #e12727;
}
.widget-news__item :hover .widget-news__item-image img {
  -webkit-transform: scale(1.3);
      -ms-transform: scale(1.3);
          transform: scale(1.3);
}
.widget-news__item :hover .widget-news__item-except {
  color: #eeeeee;
}

.footer {
  display: grid;
  grid-template-areas: "a1 a2 a3 a4" "a5 a5 a5 a5";
  grid-template-columns: repeat(4, 1fr);
}
.footer-item {
  margin-right: 15px;
}
.footer-item:nth-of-type(4) {
  margin-right: 0;
}
.footer-item:nth-of-type(5) {
  margin-right: 0;
}

.footer-item:nth-of-type(1) {
  grid-area: a1;
}

.footer-item:nth-of-type(2) {
  grid-area: a2;
}

.footer-item:nth-of-type(3) {
  grid-area: a3;
}

.footer-item:nth-of-type(4) {
  grid-area: a4;
}

.footer-item:nth-of-type(5) {
  grid-area: a5;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */